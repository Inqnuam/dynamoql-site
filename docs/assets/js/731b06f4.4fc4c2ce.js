"use strict";(self.webpackChunkdynamo_ql=self.webpackChunkdynamo_ql||[]).push([[1381],{7311:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var s=t(5893),o=t(1151);const i={},r=void 0,d={id:"model/API/using LSI - GSI",title:"using LSI - GSI",description:"Introduction",source:"@site/docs/model/API/using LSI - GSI.mdx",sourceDirName:"model/API",slug:"/model/API/using LSI - GSI",permalink:"/dynamoql-site/docs/model/API/using LSI - GSI",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"update",permalink:"/dynamoql-site/docs/model/API/update"},next:{title:"Extend Model",permalink:"/dynamoql-site/docs/model/Extend Model"}},c={},a=[{value:"Introduction",id:"introduction",level:3},{value:"execute",id:"execute",level:3},{value:"options",id:"options",level:3},{value:"exec",id:"exec",level:4},{value:"Select",id:"select",level:4},{value:"getterInfo",id:"getterinfo",level:4}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"using"})," method allows you to perform ",(0,s.jsx)(n.a,{href:"./query",children:"query"})," / ",(0,s.jsx)(n.a,{href:"./scan",children:"scan"})," request on LSI and GSI."]}),"\n",(0,s.jsx)(n.h3,{id:"execute",children:"execute"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"using"})," takes 1 index/table name and returns on object containing ",(0,s.jsx)(n.code,{children:"query"})," and ",(0,s.jsx)(n.code,{children:"scan"})," methods.",(0,s.jsx)(n.br,{}),"\n","index/table name must be defined in Schema under ",(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#--lsi",children:"LSI"})," / ",(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#--gsi",children:"GSI"}),".",(0,s.jsx)(n.br,{}),"\n","Condition expression and Select depends on index / table projected value."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.using("group-index").query(\n  {\n    groupId: "group-1",\n    age: {\n      $gt: 21,\n    },\n  },\n  {\n    Limit: 5,\n  }\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," is an object which accepts ",(0,s.jsx)(n.code,{children:"QueryCommandInput"})," / ",(0,s.jsx)(n.code,{children:"ScanCommandInput"})," options and DynamoQL specific options."]}),"\n",(0,s.jsx)(n.h4,{id:"exec",children:"exec"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"exec"})," boolean directive to execute or not the actual request.",(0,s.jsx)(n.br,{}),"\n","When ",(0,s.jsx)(n.code,{children:"false"})," update will return ",(0,s.jsx)(n.code,{children:"QueryCommandInput"})," / ",(0,s.jsx)(n.code,{children:"ScanCommandInput"})," object."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import type { QueryCommandInput } from "@aws-sdk/client-dynamodb";\n\nconst cmd: QueryCommandInput = await User.using("group-index").query(\n  {\n    groupId: "group-1",\n    age: {\n      $gt: 21,\n    },\n  },\n   // highlight-next-line\n  { exec: false }\n);\n'})}),"\n",(0,s.jsx)(n.h4,{id:"select",children:"Select"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Select"})," accepts an array of projected attributes and produces a ",(0,s.jsx)(n.code,{children:"ProjectionExpression"}),", ",(0,s.jsx)(n.code,{children:'"ALL"'})," | ",(0,s.jsx)(n.code,{children:'"KEYS"'})," ",(0,s.jsx)(n.code,{children:'"COUNT"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'await User.using("group-index").query(\n  {\n    groupId: "group-1",\n  },\n  // highlight-next-line\n  { Select: ["id", "isActive"] }\n);\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Select"})," affects returned ",(0,s.jsx)(n.code,{children:"Items"})," type."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const { Items } = await User.using("group-index").query(\n  {\n    groupId: "group-1",\n  },\n  // highlight-next-line\n  { Select: ["id", "isActive"] }\n);\n\n// err\nItems[0]?.firstname; // Property \'firstname\' does not exist on type { id: string; isActive?:boolean } ...\n'})})]}),"\n",(0,s.jsx)(n.h4,{id:"getterinfo",children:"getterInfo"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"getterInfo"})," allows you to pass any value to your Schema ",(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#--get",children:"get"})," function's third argument."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.using("group-index").query(\n  {\n    groupId: "group-1",\n    age: {\n      $gt: 21,\n    },\n  },\n  // highlight-next-line\n  { getterInfo: { forFrontend: true } }\n);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var s=t(7294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);