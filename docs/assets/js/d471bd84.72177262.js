"use strict";(self.webpackChunkdynamo_ql=self.webpackChunkdynamo_ql||[]).push([[5797],{585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(5893),c=t(1151);const o={},i=void 0,a={id:"model/API/scan",title:"scan",description:"Introduction",source:"@site/docs/model/API/scan.mdx",sourceDirName:"model/API",slug:"/model/API/scan",permalink:"/dynamoql-site/docs/model/API/scan",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"query",permalink:"/dynamoql-site/docs/model/API/query"},next:{title:"transactDelete",permalink:"/dynamoql-site/docs/model/API/transactDelete"}},r={},d=[{value:"Introduction",id:"introduction",level:3},{value:"execute",id:"execute",level:3},{value:"options",id:"options",level:3},{value:"exec",id:"exec",level:4},{value:"Select",id:"select",level:4},{value:"getterInfo",id:"getterinfo",level:4}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"scan"})," method performs scan request using aws-sdk ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/client/dynamodb/command/ScanCommand/",children:"ScanCommand"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Items"})," in ScanCommandOutput is fully typed based on your Schema declaration."]}),"\n",(0,s.jsx)(n.h3,{id:"execute",children:"execute"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"scan"})," takes 2 optionnal arguments:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#condition-expression",children:"FilterExpression"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#options",children:"options"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  { ReturnConsumedCapacity: "TOTAL" }\n);\n\nres.Items[0].firstname;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," is an object which accepts ",(0,s.jsx)(n.code,{children:"ScanCommandInput"})," options and DynamoQL specific options."]}),"\n",(0,s.jsx)(n.h4,{id:"exec",children:"exec"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"exec"})," boolean directive to execute or not the actual request.",(0,s.jsx)(n.br,{}),"\n","When ",(0,s.jsx)(n.code,{children:"false"})," scan will return ",(0,s.jsx)(n.code,{children:"ScanCommandInput"})," object."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import type { ScanCommandInput } from "@aws-sdk/client-dynamodb";\n\nconst cmd: ScanCommandInput = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  // highlight-next-line\n  { exec: false }\n);\n'})}),"\n",(0,s.jsx)(n.h4,{id:"select",children:"Select"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Select"})," accepts an array of attributes which produces a ",(0,s.jsx)(n.code,{children:"ProjectionExpression"}),", or ",(0,s.jsx)(n.code,{children:'"ALL"'})," | ",(0,s.jsx)(n.code,{children:'"COUNT"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  // highlight-next-line\n  { Select: ["id", "isActive"] }\n);\n\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Select"})," affects ScanCommandOutput type."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const { Items } = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  { Select: ["id", "isActive"] }\n);\n\n// err\nItems[0].firstname; // Property \'firstname\' does not exist on type { id: string; isActive?:boolean } ...\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const res = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  { Select: \"COUNT\" }\n);\n\n// err\nres.Items; // Property 'Items' does not exist on type ScanCommandOutput\n"})})]}),"\n",(0,s.jsx)(n.h4,{id:"getterinfo",children:"getterInfo"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"getterInfo"})," allows you to pass any value to your Schema ",(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#--get",children:"get"})," function's third argument."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const res = await User.scan(\n  {\n    age: { \n        $gt: 22 \n    }\n  },\n  // highlight-next-line\n  { getterInfo: { forFrontend: true } }\n);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(7294);const c={},o=s.createContext(c);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);