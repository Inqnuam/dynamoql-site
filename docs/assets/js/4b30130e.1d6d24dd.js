"use strict";(self.webpackChunkdynamo_ql=self.webpackChunkdynamo_ql||[]).push([[7879],{5876:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=t(5893),o=t(1151);const r={},c=void 0,i={id:"model/API/batchDelete",title:"batchDelete",description:"Introduction",source:"@site/docs/model/API/batchDelete.mdx",sourceDirName:"model/API",slug:"/model/API/batchDelete",permalink:"/dynamoql-site/docs/model/API/batchDelete",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Define a Model",permalink:"/dynamoql-site/docs/model/Define a Model"},next:{title:"batchGet",permalink:"/dynamoql-site/docs/model/API/batchGet"}},a={},d=[{value:"Introduction",id:"introduction",level:3},{value:"execute",id:"execute",level:3},{value:"options",id:"options",level:3},{value:"exec",id:"exec",level:4}];function l(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"batchDelete"})," method performs batch deletion request using aws-sdk ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/client/dynamodb/command/BatchWriteItemCommand/",children:"BatchWriteItemCommand"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"execute",children:"execute"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"batchDelete"})," takes 2 arguments:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"list of Items Key's (required)"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#options",children:"options"})," (optionnal)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.batchDelete(\n  ["user-1", "user-2", "user-3", "user-4"],\n  { ReturnConsumedCapacity: "TOTAL" }\n);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If your table is a composite table (HASH and RANGE) you must pass ",(0,s.jsx)(n.code,{children:"primaryIndex"})," and ",(0,s.jsx)(n.code,{children:"sortKey"})," as object."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.batchDelete(\n  [\n    {\n      groupId: "group-1",\n      userId: "user-1",\n    },\n    {\n      groupId: "group-1",\n      userId: "user-2",\n    },\n    {\n      groupId: "group-2",\n      userId: "user-3",\n    },\n    {\n      groupId: "group-2",\n      userId: "user-4",\n    },\n  ],\n  { ReturnConsumedCapacity: "TOTAL" }\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," is an object which accepts ",(0,s.jsx)(n.code,{children:"BatchWriteItemCommand"})," options and DynamoQL specific options."]}),"\n",(0,s.jsx)(n.h4,{id:"exec",children:"exec"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"exec"})," boolean directive to execute or not the actual request."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import type { BatchWriteItemCommandInput } from "@aws-sdk/client-dynamodb";\n\nconst cmd: BatchWriteItemCommandInput = await User.batchDelete(\n  ["user-1", "user-2", "user-3", "user-4"],\n  // highlight-next-line\n  { exec: false }\n);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var s=t(7294);const o={},r=s.createContext(o);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);