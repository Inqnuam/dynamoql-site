"use strict";(self.webpackChunkdynamo_ql=self.webpackChunkdynamo_ql||[]).push([[829],{4912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var s=t(5893),r=t(1151);const c={},a=void 0,i={id:"model/API/transactDelete",title:"transactDelete",description:"Introduction",source:"@site/docs/model/API/transactDelete.mdx",sourceDirName:"model/API",slug:"/model/API/transactDelete",permalink:"/dynamoql-site/docs/model/API/transactDelete",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"scan",permalink:"/dynamoql-site/docs/model/API/scan"},next:{title:"transactGet",permalink:"/dynamoql-site/docs/model/API/transactGet"}},o={},d=[{value:"Introduction",id:"introduction",level:3},{value:"execute",id:"execute",level:3},{value:"options",id:"options",level:3},{value:"exec",id:"exec",level:4},{value:"check",id:"check",level:4}];function l(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"transactDelete"})," method performs transact delete request using aws-sdk ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/client/dynamodb/command/TransactWriteItemsCommand/",children:"TransactWriteItemsCommand"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"execute",children:"execute"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"transactDelete"})," takes 2 arguments:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["(required) an array of object where each object includes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["item ",(0,s.jsx)(n.code,{children:"primaryIndex"})]}),"\n",(0,s.jsx)(n.li,{children:"optionnally KeyConditionExpression"}),"\n",(0,s.jsxs)(n.li,{children:["optionnally ",(0,s.jsx)(n.a,{href:"/docs/schema/data-types/String#condition-expression",children:"Condition expression"})," which will perform ",(0,s.jsx)(n.code,{children:"FilterExpression"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#options",children:"options"})," (optionnal)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.transactDelete(\n  [\n    {\n      id: "user-1",\n    },\n    {\n      id: "user-2",\n      age: {\n        $gt: 20,\n      },\n    },\n  ],\n  { ReturnConsumedCapacity: "TOTAL" }\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," is an object which accepts ",(0,s.jsx)(n.code,{children:"TransactWriteItemsInput"})," options and DynamoQL specific options."]}),"\n",(0,s.jsx)(n.h4,{id:"exec",children:"exec"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"exec"})," boolean directive to execute or not the actual request."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import type { TransactWriteItemsInput } from "@aws-sdk/client-dynamodb";\n\nconst cmd: TransactWriteItemsInput = await User.transactDelete(\n  [\n    {\n      id: "user-1",\n    },\n    {\n      id: "user-2",\n      age: {\n        $gt: 20,\n      },\n    },\n  ],\n  // highlight-next-line\n  { exec: false }\n);\n'})}),"\n",(0,s.jsx)(n.h4,{id:"check",children:"check"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ConditionCheck.html",children:"ConditionCheck"})," on the same table."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const res = await User.transactDelete(\n  [\n    {\n      id: "user-1",\n    },\n    {\n      id: "user-2",\n      age: {\n        $gt: 20,\n      },\n    },\n  ],\n  {\n    // highlight-start\n    check: [\n      {\n        id: "user-64",\n        isActive: false,\n      },\n    ],\n    // highlight-end\n  }\n);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you need ConditionCheck on another table, use ",(0,s.jsx)(n.code,{children:"{ exec: false }"})," then merge your conditions manually."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { TransactWriteItemsCommand } from "@aws-sdk/client-dynamodb";\nimport type { TransactWriteItemsInput } from "@aws-sdk/client-dynamodb";\n\nconst cmd: TransactWriteItemsInput = await User.transactDelete(\n  [\n    {\n      id: "user-1",\n    },\n    {\n      id: "user-2",\n      age: {\n        $gt: 20,\n      },\n    },\n  ],\n  { exec: false }\n);\n\n// pretending UserOrders is another instance of Model\n\nconst orderCheck: TransactWriteItemsInput = await UserOrders.transactWrite(\n  [\n    {\n      check: [\n        {\n          id: "user-id",\n          orders: {\n            $size: 0,\n          },\n        },\n      ],\n    },\n  ],\n  { exec: false }\n);\n\ncmd.TransactItems.push(orderCheck.TransactItems[0]);\n\nawait User.client.send(new TransactWriteItemsCommand(cmd));\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var s=t(7294);const r={},c=s.createContext(r);function a(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);